#!/usr/bin/python

import gobject

import sys
import dbus
import dbus.service
import dbus.mainloop.glib
import os.path
from optparse import OptionParser

def parse_options():
    parser.add_option("-d", "--device", dest="device",
                      help="Device to connect", metavar="DEVICE")
    parser.add_option("-c", "--chdir", dest="new_dir",
                      help="Change current directory to DIR", metavar="DIR")
    parser.add_option("-l", "--list", action="store_true", dest="list_dir",
                      help="List the current directory")
    parser.add_option("-g", "--get", dest="get_file",
                      help="Get FILE", metavar="FILE")
    parser.add_option("-p", "--put", dest="put_file",
                      help="Put FILE", metavar="FILE")
    parser.add_option("-y", "--copy", dest="copy_file",
                      help="Copy FILE", metavar="FILE")
    parser.add_option("-m", "--move", dest="move_file",
                      help="Move FILE", metavar="FILE")
    parser.add_option("-n", "--destname", dest="dest_file",
                      help="Destination FILE", metavar="FILE")
    parser.add_option("-r", "--remove", dest="remove_file",
                      help="Remove FILE", metavar="FILE")
    parser.add_option("-v", "--verbose", action="store_true", dest="verbose")

    return parser.parse_args()

def error(err):
    print err

def void_reply():
    pass

def transfer_complete():
    if options.verbose:
        print "Transfer finished"
    mainloop.quit()

def change_folder(session, new_dir):
    for node in new_dir.split("/"):
        session.ChangeFolder(node)

def list_folder(session):
    for i in session.ListFolder():
        if i["Type"] == "folder":
            print "%s/" % (i["Name"])
        else:
            print "%s" % (i["Name"])

def put_file(session, filename):
    session.PutFile(os.path.abspath(filename),
                    os.path.basename(filename),
                    reply_handler=transfer_complete,
                    error_handler=error)

def get_file(session, filename):
    session.GetFile(os.path.abspath(filename),
                    os.path.basename(filename),
                    reply_handler=transfer_complete,
                    error_handler=error)

def remove_file(session, filename):
    session.Delete(filename,
                    reply_handler=void_reply,
                    error_handler=error)

def move_file(session, filename, destname):
    session.MoveFile(filename,
                    destname,
                    reply_handler=void_reply,
                    error_handler=error)

def copy_file(session, filename, destname):
    session.CopyFile(filename,
                    destname,
                    reply_handler=void_reply,
                    error_handler=error)

if  __name__ == '__main__':

    dbus.mainloop.glib.DBusGMainLoop(set_as_default=True)

    parser = OptionParser()

    (options, args) = parse_options()

    if not options.device:
        parser.print_help()
        sys.exit(0)

    bus = dbus.SessionBus()
    mainloop = gobject.MainLoop()

    client = dbus.Interface(bus.get_object("org.openobex.client", "/"),
                            "org.openobex.Client")

    session_path = client.CreateSession(options.device, { "Target": "ftp" })

    session = dbus.Interface(bus.get_object("org.openobex.client", session_path),
                 "org.openobex.Session")

    ftp = dbus.Interface(bus.get_object("org.openobex.client", session_path),
                 "org.openobex.FileTransfer")

    if options.new_dir:
        change_folder(ftp, options.new_dir)

    if options.list_dir:
        list_folder(ftp)

    if options.get_file:
        get_file(ftp, options.get_file)

    if options.put_file:
        put_file(ftp, options.put_file)

    if options.move_file:
        move_file(ftp, options.move_file, options.dest_file)

    if options.copy_file:
        copy_file(ftp, options.copy_file, options.dest_file)

    if options.remove_file:
       remove_file(ftp, options.remove_file)

    mainloop.run()
